[
  {
    "description": "object generator",
    "tests": [
        {
          "description": "addP === false && !props && !patternProps",
          "schema": {
            "type": "object",
            "additionalProperties": false
          },
          "valid": true
        },
        {
          "description": "addP === false && props && !patternProps",
          "schema": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            },
            "additionalProperties": false
          },
          "valid": true
        },
        {
          "description": "addP === false && !props && patternProps",
          "schema": {
            "type": "object",
            "patternProperties": {
                "count": {
                    "type": "integer"
                }
            },
            "additionalProperties": false
          },
          "valid": true
        },
        {
          "description": "addP === false && props && patternProps",
          "schema": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            },
            "patternProperties": {
                "v-[0-3]": {
                    "type": "integer"
                }
            },
            "additionalProperties": false
          },
          "valid": true
        },
        {
          "description": "addP === false && !props && !patternProps && minProperties",
          "schema": {
            "type": "object",
            "minProperties": 2,
            "additionalProperties": false
          },
          "throws": "missing properties for:\n[\\s\\S]+? in \\/"
        },
        {
          "description": "addP === undef || props",
          "schema": {
            "type": "object",
            "minProperties": 2,
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
          },
          "valid": true
        },
        {
        "description": "should skip some non-required properties",
        "schema": {
          "type": "object",
          "properties": {
            "one": { "type": "string" },
            "two": { "type": "string" },
            "three": { "type": "string" }
          },
          "required": ["one", "three"]
        },
        "valid": true
      },
      {
        "description": "should handle patternProperties",
        "schema": {
          "type": "object",
          "patternProperties": {
            "a\\w{4,12}": { "type": "string" },
            "xy-[a-f\\d]{4}-n[pqrz]": { "type": "string" }
          }
        },
        "valid": true
      },
      {
        "description": "should handle minProperties",
        "schema": {
          "type": "object",
          "properties": {
            "x": { "type": "string" },
            "y": { "type": "string" }
          },
          "required": ["x", "y"],
          "minProperties": 2
        },
        "valid": true
      },
      {
        "description": "should handle maxProperties",
        "schema": {
          "type": "object",
          "patternProperties": {
            "a+": { "type": "string" },
            "b+": { "type": "string" },
            "c+": { "type": "string" }
          },
          "minProperties": 1,
          "maxProperties": 2
        },
        "valid": true
      },
      {
        "description": "should handle additionalProperties (exact number)",
        "schema": {
          "type": "object",
          "properties": {
            "example": { "type": "string" }
          },
          "minProperties": 5,
          "maxProperties": 5,
          "additionalProperties": { "type": "string" }
        },
        "valid": true
      },
      {
        "description": "should handle additionalProperties (random number)",
        "schema": {
          "type": "object",
          "minProperties": 20,
          "maxProperties": 30,
          "additionalProperties": { "type": "string" }
        },
        "valid": true
      },
      {
        "description": "should handle absence of property definitions",
        "schema": {
          "type": "object",
          "minProperties": 20,
          "maxProperties": 30
        },
        "valid": true
      },
      {
        "description": "should handle conflicting pattern definitions",
        "schema": {
          "type": "object",
          "patternProperties": {
              "^hyb": {
                  "type": "integer"
              },
              "rid$": {
                  "type": "string"
              }
          },
          "required": [ "hybrid" ]
        },
        "valid": false
      },
      {
        "description": "should handle required properties with missing properties field",
        "schema": {
          "type": "object",
          "additionalProperties": {
              "type": "string"
          },
          "required": [ "hybrid", "other" ]
        },
        "valid": true
      },
      {
        "description": "should handle required properties with empty properties field",
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "required": [ "hybrid", "other" ]
        },
        "throws": "missing properties for:\n[\\s\\S]+? in \\/"
      },
      {
        "description": "should handle required properties with empty properties field and no additionalProperties provided",
        "schema": {
          "type": "object",
          "properties": {},
          "required": [ "hybrid", "other" ]
        },
        "valid": false
      },
      {
        "description": "should handle required properties with patternProperties and minProperties field",
        "schema": {
          "type": "object",
          "patternProperties": {
              "^hybrid.*": {
                  "type": "string"
              },
              ".*other$": {
                  "type": "integer"
              }
          },
          "minProperties": 20,
          "additionalProperties": false,
          "required": [ "hybrid", "other" ]
        },
        "valid": true
      },
      {
        "description": "should handle additionalProperties being false with no properties or patternProperties",
        "schema": {
          "type": "object",
          "additionalProperties": false
        },
        "valid": true
      },
      {
        "description": "should handle superposition of patternProperties and additionalProperties",
        "schema": {
          "type": "object",
          "patternProperties": {
              "^hyb": {
                  "type": "integer"
              },
              "rid$": {
                  "maximum": 3
              },
              "^not-relevant$": {
                  "type": "string"
              }
          },
          "additionalProperties": {
              "type": "string"
          },
          "required": [ "hybrid", "other" ]
        },
        "valid": true
      },
      {
        "description": "should validate properties using all options",
        "schema": {
          "type": "object",
          "minProperties": 20,
          "maxProperties": 30,
          "additionalProperties": false
        },
        "throws": "missing properties for:\n[\\s\\S]+? in \\/"
      },
      {
        "description": "should throw if it couldnt generate enough keys",
        "schema": {
          "type": "object",
          "properties": {
            "$count": {
                "type": "string"
            }
          },
          "minProperties": 20,
          "additionalProperties": false
        },
        "throws": "properties constraints were too strong to successfully generate a valid object for:\n[\\s\\S]+? in \\/"
      },
      {
        "description": "should handle inferred type (when possible)",
        "schema": {
          "properties": {
            "name": { "type": "string" }
          }
        },
        "type": "object"
      },
      {
        "description": "should handle additionalPropertiesFormat",
        "schema": {
          "type": "object",
          "minProperties": 5,
          "maxProperties": 5,
          "additionalPropertiesFormat": "date-time",
          "additionalProperties": {
            "type": "string"
          }
        },
        "valid": true
      },
      {
        "description": "should validate additionalPropertiesFormat core formats",
        "schema": {
          "type": "object",
          "minProperties": 1,
          "maxProperties": 1,
          "additionalPropertiesFormat": "unknown",
          "additionalProperties": {
            "type": "string"
          }
        },
        "throws": "Error: unknown registry key .+? in \\/"
      }
    ]
  }
]
